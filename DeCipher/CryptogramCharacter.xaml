<!-- Custom XAML control for a cryptogram character. The important attributes are IsTabStop which allows the control to
    get focus, DataContext which is used for binding, and the event handlers. -->
<UserControl
    x:Class="DeCipher.CryptogramCharacter"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:DeCipher"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"
    IsTabStop="True"
    TabNavigation="Once"
    Tapped="UserControl_Tapped"
    GotFocus="UserControl_GotFocus"
    LostFocus="UserControl_LostFocus"
    KeyDown="UserControl_KeyDown"
    DataContext="{Binding RelativeSource={RelativeSource Self}}">
    
    <!-- This stack panel holds text blocks that represent 1) the letter in the cryptogram and 2) the letter in
         the solution -->
    <StackPanel Orientation="Vertical" x:Name="grid" HorizontalAlignment="Center" VerticalAlignment="Center">
        
        <!-- These text blocks using a Binding that references a dependency property defined in the C# code. Note that
             the TextBlocks know which object implements these properties because of the DataContext attribute defined
             on UserControl up above; it says to access properties on the control (CryptogramCharacter) itself. -->
        <TextBlock x:Name="cryptogramCharacter" FontSize="24" FontFamily="Consolas"/>
        <TextBlock x:Name="solutionCharacter" Text="{Binding Path=SolutionLetter}" FontSize="24" FontFamily="Consolas"/>
    </StackPanel>
</UserControl>
